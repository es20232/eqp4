{"ast":null,"code":"import{Box,Stack,Skeleton}from\"@mui/material\";import React,{useState}from\"react\";import Post from\"./Post\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Feed=_ref=>{let{posts}=_ref;const[loading,setLoading]=useState(true);setTimeout(()=>{setLoading(false);},[3000]);return/*#__PURE__*/_jsx(Box,{flex:8,p:{xs:0,md:2},children:loading?/*#__PURE__*/ // Renderiza o esqueleto enquanto os posts estão sendo carregados\n_jsxs(Stack,{spacing:1,children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"text\",height:100}),/*#__PURE__*/_jsx(Skeleton,{variant:\"text\",height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"text\",height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:300})]}):/*#__PURE__*/ // Renderiza dinamicamente os posts\n_jsx(Stack,{spacing:2,children:posts.map(post=>/*#__PURE__*/_jsx(Post,{post:post},post.id))})});};export default Feed;","map":{"version":3,"names":["Box","Stack","Skeleton","React","useState","Post","jsx","_jsx","jsxs","_jsxs","Feed","_ref","posts","loading","setLoading","setTimeout","flex","p","xs","md","children","spacing","variant","height","map","post","id"],"sources":["C:/Users/guigi/OneDrive/Documentos/GitHub/eqp4-final/tigrim/frontend/src/components/Feed.jsx"],"sourcesContent":["import { Box, Stack, Skeleton } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nconst Feed = ({posts}) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, [3000]);\r\n\r\n  return (\r\n    <Box flex={8} p={{ xs: 0, md: 2 }}>\r\n      {loading ? (\r\n        // Renderiza o esqueleto enquanto os posts estão sendo carregados\r\n        <Stack spacing={1}>\r\n          <Skeleton variant=\"text\" height={100} />\r\n          <Skeleton variant=\"text\" height={20} />\r\n          <Skeleton variant=\"text\" height={20} />\r\n          <Skeleton variant=\"rectangular\" height={300} />\r\n        </Stack>\r\n      ) : (\r\n        // Renderiza dinamicamente os posts\r\n        <Stack spacing={2}>\r\n          {posts.map((post) => (\r\n            <Post key={post.id} post={post} />\r\n          ))}\r\n        </Stack>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Feed;"],"mappings":"AAAA,OAASA,GAAG,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,eAAe,CACpD,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,IAAI,CAAGC,IAAA,EAAa,IAAZ,CAACC,KAAK,CAAC,CAAAD,IAAA,CACnB,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE5CW,UAAU,CAAC,IAAM,CACfD,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,CAAC,IAAI,CAAC,CAAC,CAEV,mBACEP,IAAA,CAACP,GAAG,EAACgB,IAAI,CAAE,CAAE,CAACC,CAAC,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,CAC/BP,OAAO,eACN;AACAJ,KAAA,CAACR,KAAK,EAACoB,OAAO,CAAE,CAAE,CAAAD,QAAA,eAChBb,IAAA,CAACL,QAAQ,EAACoB,OAAO,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAE,CAAC,cACxChB,IAAA,CAACL,QAAQ,EAACoB,OAAO,CAAC,MAAM,CAACC,MAAM,CAAE,EAAG,CAAE,CAAC,cACvChB,IAAA,CAACL,QAAQ,EAACoB,OAAO,CAAC,MAAM,CAACC,MAAM,CAAE,EAAG,CAAE,CAAC,cACvChB,IAAA,CAACL,QAAQ,EAACoB,OAAO,CAAC,aAAa,CAACC,MAAM,CAAE,GAAI,CAAE,CAAC,EAC1C,CAAC,eAER;AACAhB,IAAA,CAACN,KAAK,EAACoB,OAAO,CAAE,CAAE,CAAAD,QAAA,CACfR,KAAK,CAACY,GAAG,CAAEC,IAAI,eACdlB,IAAA,CAACF,IAAI,EAAeoB,IAAI,CAAEA,IAAK,EAApBA,IAAI,CAACC,EAAiB,CAClC,CAAC,CACG,CACR,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}