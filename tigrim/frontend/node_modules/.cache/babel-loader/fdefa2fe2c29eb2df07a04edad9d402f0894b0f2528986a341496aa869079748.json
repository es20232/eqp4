{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guigi\\\\OneDrive\\\\Documentos\\\\GitHub\\\\eqp4-final\\\\tigrim\\\\frontend\\\\src\\\\components\\\\Feed.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Stack, Skeleton } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  setTimeout(() => {\n    setLoading(false);\n  }, [3000]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flex: 8,\n    p: {\n      xs: 0,\n      md: 2\n    },\n    children: loading ?\n    /*#__PURE__*/\n    // Renderiza o esqueleto enquanto os posts estão sendo carregados\n    _jsxDEV(Stack, {\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rectangular\",\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Renderiza dinamicamente os posts\n    _jsxDEV(Stack, {\n      spacing: 2,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"awoWwSKBZAy48DVUNX9vIFbdsbI=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["Box","Stack","Skeleton","React","useState","Post","jsxDEV","_jsxDEV","Feed","_s","loading","setLoading","setTimeout","flex","p","xs","md","children","spacing","variant","height","fileName","_jsxFileName","lineNumber","columnNumber","posts","map","post","id","_c","$RefreshReg$"],"sources":["C:/Users/guigi/OneDrive/Documentos/GitHub/eqp4-final/tigrim/frontend/src/components/Feed.jsx"],"sourcesContent":["import { Box, Stack, Skeleton } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nconst Feed = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, [3000]);\r\n\r\n  return (\r\n    <Box flex={8} p={{ xs: 0, md: 2 }}>\r\n      {loading ? (\r\n        // Renderiza o esqueleto enquanto os posts estão sendo carregados\r\n        <Stack spacing={1}>\r\n          <Skeleton variant=\"text\" height={100} />\r\n          <Skeleton variant=\"text\" height={20} />\r\n          <Skeleton variant=\"text\" height={20} />\r\n          <Skeleton variant=\"rectangular\" height={300} />\r\n        </Stack>\r\n      ) : (\r\n        // Renderiza dinamicamente os posts\r\n        <Stack spacing={2}>\r\n          {posts.map((post) => (\r\n            <Post key={post.id} post={post} />\r\n          ))}\r\n        </Stack>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Feed;"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACpD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CQ,UAAU,CAAC,MAAM;IACfD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA,CAACP,GAAG;IAACa,IAAI,EAAE,CAAE;IAACC,CAAC,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,EAC/BP,OAAO;IAAA;IACN;IACAH,OAAA,CAACN,KAAK;MAACiB,OAAO,EAAE,CAAE;MAAAD,QAAA,gBAChBV,OAAA,CAACL,QAAQ;QAACiB,OAAO,EAAC,MAAM;QAACC,MAAM,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCjB,OAAA,CAACL,QAAQ;QAACiB,OAAO,EAAC,MAAM;QAACC,MAAM,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCjB,OAAA,CAACL,QAAQ;QAACiB,OAAO,EAAC,MAAM;QAACC,MAAM,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCjB,OAAA,CAACL,QAAQ;QAACiB,OAAO,EAAC,aAAa;QAACC,MAAM,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;IAAA;IAER;IACAjB,OAAA,CAACN,KAAK;MAACiB,OAAO,EAAE,CAAE;MAAAD,QAAA,EACfQ,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACdpB,OAAA,CAACF,IAAI;QAAesB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}