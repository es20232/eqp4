{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaob\\\\OneDrive\\\\Documents\\\\Projects\\\\tigrim\\\\frontend\\\\src\\\\components\\\\Feed.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Stack, Skeleton } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  setTimeout(() => {\n    setLoading(true);\n  }, [3000]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flex: 8,\n    p: {\n      xs: 0,\n      md: 2\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rectangular\",\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"awoWwSKBZAy48DVUNX9vIFbdsbI=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["Box","Stack","Skeleton","React","useState","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Feed","_s","loading","setLoading","setTimeout","flex","p","xs","md","children","spacing","variant","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/joaob/OneDrive/Documents/Projects/tigrim/frontend/src/components/Feed.jsx"],"sourcesContent":["import { Box, Stack, Skeleton } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nconst Feed = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  setTimeout(() => {\r\n    setLoading(true);\r\n  }, [3000]);\r\n\r\n  return (\r\n    <Box flex={8} p={{ xs: 0, md: 2 }}>\r\n      {loading ? (\r\n        <Stack spacing={1}>\r\n          <Skeleton variant=\"text\" height={100} />\r\n          <Skeleton variant=\"text\" height={20} />\r\n          <Skeleton variant=\"text\" height={20} />\r\n          <Skeleton variant=\"rectangular\" height={300} />\r\n        </Stack>\r\n      ) : (\r\n        <>\r\n          <Post />\r\n          <Post />\r\n          <Post />\r\n          <Post />\r\n          <Post />\r\n          <Post />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Feed;"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACpD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CU,UAAU,CAAC,MAAM;IACfD,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EAEV,oBACEN,OAAA,CAACP,GAAG;IAACe,IAAI,EAAE,CAAE;IAACC,CAAC,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,EAC/BP,OAAO,gBACNL,OAAA,CAACN,KAAK;MAACmB,OAAO,EAAE,CAAE;MAAAD,QAAA,gBAChBZ,OAAA,CAACL,QAAQ;QAACmB,OAAO,EAAC,MAAM;QAACC,MAAM,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCnB,OAAA,CAACL,QAAQ;QAACmB,OAAO,EAAC,MAAM;QAACC,MAAM,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCnB,OAAA,CAACL,QAAQ;QAACmB,OAAO,EAAC,MAAM;QAACC,MAAM,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCnB,OAAA,CAACL,QAAQ;QAACmB,OAAO,EAAC,aAAa;QAACC,MAAM,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,gBAERnB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA,CAACF,IAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRnB,OAAA,CAACF,IAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRnB,OAAA,CAACF,IAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRnB,OAAA,CAACF,IAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRnB,OAAA,CAACF,IAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRnB,OAAA,CAACF,IAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACR;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}