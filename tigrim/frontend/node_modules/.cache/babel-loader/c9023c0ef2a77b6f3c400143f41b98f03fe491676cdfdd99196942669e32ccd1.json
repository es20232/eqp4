{"ast":null,"code":"import axios from'axios';export const uploadPost=(image,description)=>async dispatch=>{try{// Obter a autorização do sessionStorage\nconst authorization=sessionStorage.getItem('authorization');console.log(authorization);// Verificar se a autorização está presente\nif(!authorization){throw new Error('Autorização não encontrada');}// Configurar os cabeçalhos da requisição com a autorização\nconst config={headers:{'Content-Type':'multipart/form-data','Authorization':authorization}};// Criar um objeto FormData para enviar os dados do formulário\nconst formData=new FormData();formData.append('image',image);formData.append('description',description);// Enviar a requisição POST para o endpoint de upload de post\nconst res=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"posts/\"),formData,config);// Despachar uma ação de sucesso com os dados do post\ndispatch({type:'UPLOAD_POST_SUCCESS',payload:res.data});}catch(error){// Se ocorrer um erro, despachar uma ação de falha com a mensagem de erro\ndispatch({type:'UPLOAD_POST_FAIL',payload:error.message});}};","map":{"version":3,"names":["axios","uploadPost","image","description","dispatch","authorization","sessionStorage","getItem","console","log","Error","config","headers","formData","FormData","append","res","post","concat","process","env","REACT_APP_API_URL","type","payload","data","error","message"],"sources":["C:/Users/guigi/OneDrive/Documentos/GitHub/eqp4-final/tigrim/frontend/src/actions/postActions.jsx"],"sourcesContent":["import axios from 'axios'; \r\n\r\nexport const uploadPost = (image, description) => async (dispatch) => {\r\n  try {\r\n    // Obter a autorização do sessionStorage\r\n    const authorization = sessionStorage.getItem('authorization');\r\n    console.log(authorization)\r\n    // Verificar se a autorização está presente\r\n    if (!authorization) {\r\n      throw new Error('Autorização não encontrada');\r\n    }\r\n\r\n    // Configurar os cabeçalhos da requisição com a autorização\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Authorization': authorization,\r\n      },\r\n    };\r\n\r\n    // Criar um objeto FormData para enviar os dados do formulário\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n    formData.append('description', description);\r\n\r\n    // Enviar a requisição POST para o endpoint de upload de post\r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}posts/`, formData, config);\r\n\r\n    // Despachar uma ação de sucesso com os dados do post\r\n    dispatch({ type: 'UPLOAD_POST_SUCCESS', payload: res.data });\r\n  } catch (error) {\r\n    // Se ocorrer um erro, despachar uma ação de falha com a mensagem de erro\r\n    dispatch({ type: 'UPLOAD_POST_FAIL', payload: error.message });\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAACC,KAAK,CAAEC,WAAW,GAAK,KAAO,CAAAC,QAAQ,EAAK,CACpE,GAAI,CACF;AACA,KAAM,CAAAC,aAAa,CAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,CAC7DC,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC,CAC1B;AACA,GAAI,CAACA,aAAa,CAAE,CAClB,KAAM,IAAI,CAAAK,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CAEA;AACA,KAAM,CAAAC,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,qBAAqB,CACrC,eAAe,CAAEP,aACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAQ,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEb,KAAK,CAAC,CAC/BW,QAAQ,CAACE,MAAM,CAAC,aAAa,CAAEZ,WAAW,CAAC,CAE3C;AACA,KAAM,CAAAa,GAAG,CAAG,KAAM,CAAAhB,KAAK,CAACiB,IAAI,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,WAAUR,QAAQ,CAAEF,MAAM,CAAC,CAExF;AACAP,QAAQ,CAAC,CAAEkB,IAAI,CAAE,qBAAqB,CAAEC,OAAO,CAAEP,GAAG,CAACQ,IAAK,CAAC,CAAC,CAC9D,CAAE,MAAOC,KAAK,CAAE,CACd;AACArB,QAAQ,CAAC,CAAEkB,IAAI,CAAE,kBAAkB,CAAEC,OAAO,CAAEE,KAAK,CAACC,OAAQ,CAAC,CAAC,CAChE,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}